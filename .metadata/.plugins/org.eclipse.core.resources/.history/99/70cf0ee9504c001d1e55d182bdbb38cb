import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;



public class ServicioCaminos {

	private Grafo<?> grafo;
	private int origen;
	private int destino;
	private int lim;
	protected HashMap<Integer, String> colores;
	
	// Servicio caminos
	public ServicioCaminos(Grafo<?> grafo, int origen, int destino, int lim) {
		this.grafo = grafo;
		this.origen = origen;
		this.destino = destino;
		this.lim = lim;
	}

	public List<List<Integer>> caminos() {
		// Resolver Caminos
		return new ArrayList<>();
	}

	private void iniciarEstructura() {
		for (Iterator<Integer> vertices = this.grafo.obtenerVertices(); vertices.hasNext();) {
			Integer vertice = (Integer) vertices.next();
			colores.put(vertice, "blanco");
		}
	}
	
	public ArrayList<ArrayList<Integer>> encontrarCaminos(int origen, int destino) {
		iniciarEstructura();
		return encontrarCaminosRecorrido(origen, destino);
	}

	private ArrayList<ArrayList<Integer>> encontrarCaminosRecorrido(int verticeActual, int destino) {
		colores.put(verticeActual,"amarillo");
		ArrayList<ArrayList<Integer>> salida = new ArrayList<ArrayList<Integer>>();
		if (verticeActual == destino) {
			ArrayList<Integer> caminoUnico = new ArrayList<Integer>();
			caminoUnico.add(verticeActual);
			salida.add(caminoUnico);
			colores.put(verticeActual, "blanco");
			return salida;
		}
		else {
			for (Iterator<Integer> adyacentes = this.grafo.obtenerAdyacentes(verticeActual); adyacentes.hasNext();) {
				Integer adyacente = (Integer) adyacentes.next();
				if (colores.get(adyacente).equals("blanco")) {
					ArrayList<ArrayList<Integer>> caminos = encontrarCaminosRecorrido(adyacente,destino);
					for (ArrayList<Integer> camino: caminos) {
						if (!camino.isEmpty()) {
							ArrayList<Integer> caminoCompleto = new ArrayList<Integer>();
							caminoCompleto.add(verticeActual);
							caminoCompleto.addAll(camino);
							salida.add(caminoCompleto);
						}
					}					
				}
			}
			
			colores.put(verticeActual, "blanco"); // IMPORTANTE
			
			return salida;
		}
	}
	
	
}