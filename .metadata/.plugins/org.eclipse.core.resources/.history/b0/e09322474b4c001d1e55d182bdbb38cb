import java.util.Iterator;

public interface Grafo<T> {
// Agrega un vertice
	public void agregarVertice(int verticeId);

// Borra un vertice
	public void borrarVertice(int verticeId);

//Agrega un arco con una etiqueta, que conecta el verticeId1 con el verticeId2
	public void agregarArco(int verticeId1, int verticeId2, T etiqueta);

	// Borra el arco que conecta el verticeId1 con el verticeId2
	public void borrarArco(int verticeId1, int verticeId2);

	// Verifica si existe un vertice
	public boolean contieneVertice(int verticeId);

	// Verifica si existe un arco entre dos vertices
	public boolean existeArco(int verticeId1, int verticeId2);

	// Obtener el arco que conecta el verticeId1 con el verticeId2
	public Arco<T> obtenerArco(int verticeId1, int verticeId2);

	public Iterator<Integer> obtenerVertices();

	public Iterator<Integer> obtenerAdyacentes(int vertice);

	Iterator<Arco<T>> obtenerArcos();

	int cantidadArcos();

	
}
